name: Ubuntu
on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'script.js'
      - 'gen_tw_ts.py'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'script.js'
      - 'gen_tw_ts.py'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        qt_ver: [5.15.0]
        qt_arch: [gcc_64]
    env:
      targetName: diserver
    steps:
      - name: cacheQt
        id: UbuntuCacheQt
        uses: actions/cache@v2
        with:
          path: ../Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
          key: ${{ runner.os }}-Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
      - name: setupQt
        if: steps.UbuntuCacheQt.outputs.cache-hit == 'true'
        shell: pwsh
        env:
          QtPath: ../Qt/${{matrix.qt_ver}}/${{matrix.qt_arch}}
        run: |
          $qt_Path=${env:QtPath}
          echo "::set-env name=Qt5_Dir::$qt_Path"
          echo "::add-path::$qt_Path/bin"
      - name: Install Qt
        if: steps.UbuntuCacheQt.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          cached: ${{ steps.UbuntuCacheQt.outputs.cache-hit }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: build ubuntu
        run: |
          cd server
          qmake CONFIG+=release
          make -j4
          cd ..
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        env:
          archiveName: ${{ matrix.os }}-${{ matrix.qt_arch }}-${{ matrix.qt_ver }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./server/release/${{ env.targetName }}
          asset_name: ${{ env.archiveName }}
          tag: ${{ github.ref }}
